// 틀린 풀이
// 연속해서 같은 발음을 하는게 어려운거지 한 단어에서 같은 발음을 여러번 하는 것이 안 되는게 아님.

// 반례
// ["ayayemaaya"]
// 내 답 : 0 / 답 : 1

#include <string>
#include <vector>
#include <iostream>

using namespace std;

int solution(vector<string> babbling) {
    int answer = 0;
    
    for(int i = 0; i < babbling.size(); i++){
        vector <bool> flags(4);
        bool flag = true;
        
        for(int j = 0; j < babbling[i].size(); j++){
            if (!flags[0] && babbling[i].substr(j, 3) == "aya") {
                flags[0] = true;
                j += 2;
            }
            else if (!flags[1] && babbling[i].substr(j, 2) == "ye") {
                flags[1] = true;
                j += 1;
            }
            else if (!flags[2] && babbling[i].substr(j, 3) == "woo") {
                flags[2] = true;
                j += 2;
            }
            else if (!flags[3] && babbling[i].substr(j, 2) == "ma") {
                flags[3] = true;
                j += 1;
            }
            else {
                flag = false;
                break;
            }
        }
        
        if (flag)
            answer++;
    }
    
    return answer;
}


// 맞은 풀이

#include <string>
#include <vector>

using namespace std;

int solution(vector<string> babbling) {
    int answer = 0;
    
    for(int i = 0; i < babbling.size(); i++){
        bool flags = true;
        int flag = 0;
        
        for(int j = 0; j < babbling[i].size(); j++){
            if (flag != 1 && babbling[i].substr(j, 3) == "aya") {
                flag = 1;
                j += 2;
            }
            else if (flag != 2 && babbling[i].substr(j, 2) == "ye") {
                flag = 2;
                j += 1;
            }
            else if (flag != 3 && babbling[i].substr(j, 3) == "woo") {
                flag = 3;
                j += 2;
            }
            else if (flag != 4 && babbling[i].substr(j, 2) == "ma") {
                flag = 4;
                j += 1;
            }
            else {
                flags = false;
                break;
            }
        }
        
        if (flags) {
            answer++;
        }
    }
    
    return answer;
}
