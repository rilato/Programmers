// 집합의 원소는 중복되어 들어갈 수 있으므로, if문의 조건에서 n * (n + 1) / 2가 아닌, 직접적인 비교를 해주어야 한다.

// 틀린 풀이

#include <string>
#include <vector>

using namespace std;

vector<int> solution(int n, int s) {
    vector<int> answer;
    
    if (s < n * (n + 1) / 2) {
        answer.push_back(-1);
    }
    else {
        int n1 = s / n;         // 작은 수
        int n2 = s / n + 1;     // 큰 수
        int n1Cnt = n;
        int n2Cnt = 0;
        
        while (1) {
            if (n1 * n1Cnt + n2 * n2Cnt == s) {
                for (int i = 0; i < n1Cnt; i++) {
                    answer.push_back(n1);
                }
                for (int i = 0; i < n2Cnt; i++) {
                    answer.push_back(n2);
                }
                break;
            }
            
            else if (n1 * n1Cnt + n2 * n2Cnt < s) {
                n1Cnt--;
                n2Cnt++;
            }
            
            else {
                n1Cnt++;
                n2Cnt--;
            }
        }
    }
    
    return answer;
}


// 맞은 풀이

#include <string>
#include <vector>

using namespace std;

vector<int> solution(int n, int s) {
    vector<int> answer;
    
    if (s < n) {
        answer.push_back(-1);
    }
    else {
        int n1 = s / n;         // 작은 수
        int n2 = s / n + 1;     // 큰 수
        int n1Cnt = n;
        int n2Cnt = 0;
        
        while (1) {
            if (n1 * n1Cnt + n2 * n2Cnt == s) {
                for (int i = 0; i < n1Cnt; i++) {
                    answer.push_back(n1);
                }
                for (int i = 0; i < n2Cnt; i++) {
                    answer.push_back(n2);
                }
                break;
            }
            
            else if (n1 * n1Cnt + n2 * n2Cnt < s) {
                n1Cnt--;
                n2Cnt++;
            }
            
            else {
                n1Cnt++;
                n2Cnt--;
            }
        }
    }
    
    return answer;
}
