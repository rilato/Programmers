// priority_queue는 디폴트가 내림차순!

#include <string>
#include <vector>
#include <queue>

using namespace std;

vector<int> solution(vector<string> operations) {
    vector<int> answer;
    priority_queue<int> pq1;
    priority_queue<int, vector<int>, greater<int>> pq2;
    int cnt = 0;
    
    for (int i = 0; i < operations.size(); i++) {
        // 큐에 들어간 개수가 없어야 한다면, 모든 큐 비워주기
        if(cnt == 0) {
            while(!pq1.empty()) {
                pq1.pop();
            }
            while(!pq2.empty()) {
                pq2.pop();
            }
        }
        
        char input = operations[i][0];
        
        if (input == 'I') {
            int num = stoi(operations[i].substr(2, operations[i].size() - 2));
            pq1.push(num);
            pq2.push(num);
            ++cnt;  // 큐에 들어간 개수 세기
        }
        if (input == 'D' && cnt != 0) {
            // 최댓값 삭제
            if (operations[i][2] == '1') {
                pq1.pop();
                --cnt;
            }
            // 최솟값 삭제
            else {
                pq2.pop();
                --cnt;
            }
        }
    }
    
    if(cnt == 0) {
        answer.push_back(0);
        answer.push_back(0);
    }else{
        answer.push_back(pq1.top());
        answer.push_back(pq2.top());
    }
    
    return answer;
}
