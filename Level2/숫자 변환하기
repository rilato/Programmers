#include <string>
#include <vector>
#include <queue>

using namespace std;

int solution(int x, int y, int n) {
    int answer = -1;
    queue <pair <int, int>> q;  // 위치, 실행 횟수
    vector <bool> visited;
    
    visited.resize(y + 1);
    
    q.push({ x, 0 });
    visited[x] = true;
    
    while (!q.empty()) {
        int now = q.front().first;
        int cnt = q.front().second;
        
        q.pop();
        
        if (now == y) {
            answer = cnt;
            break;
        }
        
        // else if를 써주지 않고, if문을 써서, 조건을 만족한다면 queue에 모두 들어갈 수 있도록 한다.
        if (now + n <= y && !visited[now + n]) {
            visited[now + n] = true;
            q.push({ now + n, cnt + 1 });
        }
        if (now * 2 <= y && !visited[now * 2]) {
            visited[now * 2] = true;
            q.push({ now * 2, cnt + 1 });
        }
        if (now * 3 <= y && !visited[now * 3]) {
            visited[now * 3] = true;
            q.push({ now * 3, cnt + 1 });
        }
    }
    
    return answer;
}
